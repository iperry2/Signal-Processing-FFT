import numpy as np
import sounddevice as sd
import matplotlib.pyplot as plt
from scipy.io.wavfile import read, write # to use audio recordings
from scipy.fftpack import fft, fftfreq
import scipy
import time


#sampling rate
N = 10000
T = 1

#define time axis
t = np.linspace(0, T, N)
df = 1/T   #frequency step

#lowest frequency
omega = 200

#square wave 1
y = np.sin(omega*t)+(1/3)*np.sin(3*omega*t)+(1/5)*np.sin(5*omega*t)+(1/7)*np.sin(7*omega*t)+(1/9)*np.sin(9*omega*t)+(1/11)*np.sin(11*omega*t)+(1/13)*np.sin(13*omega*t)+(1/15)*np.sin(15*omega*t)+(1/17)*np.sin(17*omega*t)
yarray = np.asarray(y)

#Apply FFT to square wave 1
fft_y = np.fft.fft(y)
f = np.linspace(0, N*df, N)

#write SW1 to a .wav file
scipy.io.wavfile.write('Square_Wave_1.wav', N, yarray)

#play SW1 .wav file
sd.play(y, N)
sd.wait()

#square wave 2
phase = np.random.uniform(0, 2*np.pi, size=1)
y2 = np.sin(omega*t+(np.random.random(1)[0])*2*np.pi)+(1/3)*np.sin(omega*t+(np.random.random(1)[0])*2*np.pi)+(1/5)*np.sin(5*omega*t+(np.random.random(1)[0])*2*np.pi)+(1/7)*np.sin(7*omega*t+(np.random.random(1)[0])*2*np.pi)+(1/9)*np.sin(9*omega*t+(np.random.random(1)[0])*2*np.pi)+(1/11)*np.sin(11*omega*t+(np.random.random(1)[0])*np.pi)+(1/13)*np.sin(13*omega*t+(np.random.random(1)[0])*2*np.pi)+(1/15)*np.sin(15*omega*t+(np.random.random(1)[0])*2*np.pi)+(1/17)*np.sin(17*omega*t+(np.random.random(1)[0])*2*np.pi)
y2array = np.asarray(y2)

#Apply FFT to square wave 2
fft_y2 = np.fft.fft(y2)
f2 = np.linspace(0, N*df, N)

#write SW2 to a .wav file
scipy.io.wavfile.write('Square_Wave_2.wav', N, y2array)

#play SW2 .wav file
time.sleep(1) # Sleep for 1 second
sd.play(y2, N)
sd.wait()

#plot the first 0.1 seconds of square waves y1 and y2
plt.plot(t[:1000], y2[:1000])
plt.plot(t[:1000], y[:1000])
plt.title('Square Wave 1 (orange) SW 2 (blue)')
plt.xlabel('Time (s)')
plt.ylabel('Amplitude')
plt.grid()
plt.show()

#plot the FFT of square wave 1
plt.plot(f, abs(fft_y))
plt.xlabel('Frequency (Hz)')
plt.ylabel('Amplitude')
plt.title('Fast Fourier Transform of Square Wave 1')
plt.show()

#plot the FFT of square wave 2
plt.plot(f2, abs(fft_y2))
plt.xlabel('Frequency (Hz)')
plt.ylabel('Amplitude')
plt.title('Fast Fourier Transform of Square Wave 2')
plt.show()
